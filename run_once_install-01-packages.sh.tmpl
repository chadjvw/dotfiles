#!/usr/bin/env zsh

declare -a rust_utils=(
"eza"
"bat"
"xh"
"cargo-update"
"cargo-cache"
"fd-find"
"git-delta"
"difftastic"
"just"
"ripgrep"
"skim"
"tealdeer"
"topgrade"
"zoxide"
"sd"
"bottom"
"dua"
"xd"
"jql"
"macchina"
"gping"
"ag"
"pueue"
"mise"
"tokei"
"atuin"
)

{{ if eq .chezmoi.os "linux" -}}
rust_utils+=("starship")

{{   if (.chezmoi.osRelease.name | contains "Arch Linux") }}
 yay_executable=$(which yay)
 if [ ! -x "$yay_executable" ] ; then
  sudo pacman -Syu --needed base-devel git

  cd /tmp
  git clone https://aur.archlinux.org/yay.git
  cd yay
  makepkg -si
 fi

# udpate db and install packages
yay -Syu --needed \
  vim \
  sudo \
  unrar \
  unzip \
  duf \
  restic \
  reflector \
  snapraid \
  tmux \
  tar \
  rsync \
  reflector \
  mergerfs \
  fzf \
  htop \
  grc \
  fish \
  docker \
  docker-compose \
  curl \
  cloudflared-bin \
  neovim \
  aws-cli-v2-bin

# clean unused dependencies
yay -c
{{  else if (.chezmoi.osRelease.name | contains "Debian") }}
sudo apt update
sudo apt -y upgrade
sudo apt -y install \
  curl \
  build-essential \
  pkg-config \
  libssl-dev \
  neovim \
  vim \
  git \
  htop \
  grc \
  fish \
  tar \
  rsync \
  fzf \
  python3-pip \
  awscli
pip3 install pynvim
{{   end }}
{{ else if eq .chezmoi.os "darwin" -}}

rust_utils+=("unison-fsmonitor")

# increase max watched files for unison
sudo sysctl kern.maxfiles=1310720 kern.maxfilesperproc=65536

# disable automatic space rearranging
defaults write com.apple.dock "mru-spaces" -bool "false" && killall Dock

brew bundle install --global

git lfs install

vale sync

bat cache --build

{{ end -}}

curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y

source $HOME/.cargo/env

declare -a rustup_components=(
"rust-docs"
"clippy"
"llvm-tools"
"rust-analyzer"
"rustfmt"
"cargo"
"rust-std"
"rust-src"
)

rustup toolchain install nightly

for var in ${rustup_components[@]}
do
  rustup component add --toolchain stable $var
  rustup component add --toolchain nightly $var
done

for var in ${rust_utils[@]}
do
  cargo install $var --locked
done

cargo install taplo-cli --features lsp --locked
